name: Create instance

on:
  workflow_call:
    inputs:
      instance-type:
        required: true
        type: string
      working-directory:
        required: true
        type: string
    secrets:
      aws-region:
        required: true
      aws-access-key-id:
        required: true
      aws-secret-access-key:
        required: true

jobs:
  ec2-create:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.working-directory }}

    outputs:
      private-ip: ${{ steps.tf-apply.outputs.public-ip }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws-access-key-id }}
          aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
          aws-region: ${{ secrets.aws-region }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.8
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform init -no-color -upgrade

      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Terraform Plan
        run: terraform plan -var="instance_type=${{ inputs.instance-type }}" -no-color -input=false

      - name: Terraform Apply
        id: tf-apply
        run: |
          terraform apply -var="instance_type=${{ inputs.instance-type }}" -no-color -auto-approve -input=false
          echo "public-ip=$(terraform output -raw public-ip)" >> $GITHUB_OUTPUT

      - name: Wait Until EC2 Instance is Running
        run: aws ec2 wait instance-status-ok --instance-ids $(terraform output -raw instance_id)